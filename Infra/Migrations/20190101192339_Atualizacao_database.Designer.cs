// <auto-generated />
using System;
using Infra.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infra.Migrations
{
    [DbContext(typeof(Contexto))]
    [Migration("20190101192339_Atualizacao_database")]
    partial class Atualizacao_database
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Dominio.Aliquota.Adquirente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Adquirente");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4be3ba77-fdef-491a-ade6-b29db233fdf2"),
                            Nome = "Elo"
                        },
                        new
                        {
                            Id = new Guid("80d9f4ab-85ea-4230-af0d-b7b1a41abb53"),
                            Nome = "Visa"
                        },
                        new
                        {
                            Id = new Guid("b2218bd2-6f38-42c5-9e75-c8b273f6c832"),
                            Nome = "Master"
                        });
                });

            modelBuilder.Entity("Dominio.Aliquota.Bandeira", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Bandeira");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8ed73dba-86e8-41bf-9ac2-f15d005d9d64"),
                            Nome = "Cielo"
                        },
                        new
                        {
                            Id = new Guid("567e7c1d-4283-44de-930b-0fc79a7bf682"),
                            Nome = "Elavon"
                        },
                        new
                        {
                            Id = new Guid("70795956-6672-4ab6-9fa2-d63a90b6a785"),
                            Nome = "GetNet"
                        });
                });

            modelBuilder.Entity("Dominio.Aliquota.Taxa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("IdAdquirente");

                    b.Property<Guid>("IdBandeira");

                    b.Property<decimal>("Percentual");

                    b.HasKey("Id");

                    b.HasIndex("IdAdquirente");

                    b.HasIndex("IdBandeira");

                    b.ToTable("Aliquota");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ca70d04c-99d4-4950-9704-fa025dbbd8ed"),
                            IdAdquirente = new Guid("80d9f4ab-85ea-4230-af0d-b7b1a41abb53"),
                            IdBandeira = new Guid("8ed73dba-86e8-41bf-9ac2-f15d005d9d64"),
                            Percentual = 0.0003m
                        },
                        new
                        {
                            Id = new Guid("8e4949c0-531f-4462-bb13-b54095abfc4e"),
                            IdAdquirente = new Guid("80d9f4ab-85ea-4230-af0d-b7b1a41abb53"),
                            IdBandeira = new Guid("567e7c1d-4283-44de-930b-0fc79a7bf682"),
                            Percentual = 0.015m
                        },
                        new
                        {
                            Id = new Guid("e42d76e7-7372-4c0d-bea7-ee2595ae5c99"),
                            IdAdquirente = new Guid("80d9f4ab-85ea-4230-af0d-b7b1a41abb53"),
                            IdBandeira = new Guid("70795956-6672-4ab6-9fa2-d63a90b6a785"),
                            Percentual = 0.0107m
                        },
                        new
                        {
                            Id = new Guid("016d44b8-f25f-4f96-8223-17e6860a2a8f"),
                            IdAdquirente = new Guid("b2218bd2-6f38-42c5-9e75-c8b273f6c832"),
                            IdBandeira = new Guid("8ed73dba-86e8-41bf-9ac2-f15d005d9d64"),
                            Percentual = 0.0002m
                        },
                        new
                        {
                            Id = new Guid("e8b1a661-0a65-4bce-bc68-2a873824bbc7"),
                            IdAdquirente = new Guid("b2218bd2-6f38-42c5-9e75-c8b273f6c832"),
                            IdBandeira = new Guid("567e7c1d-4283-44de-930b-0fc79a7bf682"),
                            Percentual = 0.0108m
                        },
                        new
                        {
                            Id = new Guid("02f30a31-3851-4b86-a33f-4f65d18a35b1"),
                            IdAdquirente = new Guid("b2218bd2-6f38-42c5-9e75-c8b273f6c832"),
                            IdBandeira = new Guid("70795956-6672-4ab6-9fa2-d63a90b6a785"),
                            Percentual = 0.0114m
                        },
                        new
                        {
                            Id = new Guid("952ff89a-3cfd-4ded-869e-eb56057074b2"),
                            IdAdquirente = new Guid("4be3ba77-fdef-491a-ade6-b29db233fdf2"),
                            IdBandeira = new Guid("8ed73dba-86e8-41bf-9ac2-f15d005d9d64"),
                            Percentual = 0.0001m
                        },
                        new
                        {
                            Id = new Guid("1182cb5d-faf9-4328-a7ba-c04e85fe2b65"),
                            IdAdquirente = new Guid("4be3ba77-fdef-491a-ade6-b29db233fdf2"),
                            IdBandeira = new Guid("567e7c1d-4283-44de-930b-0fc79a7bf682"),
                            Percentual = 0.0095m
                        },
                        new
                        {
                            Id = new Guid("d69b0e35-1cbc-4661-9a88-f7b28085c318"),
                            IdAdquirente = new Guid("4be3ba77-fdef-491a-ade6-b29db233fdf2"),
                            IdBandeira = new Guid("70795956-6672-4ab6-9fa2-d63a90b6a785"),
                            Percentual = 0.0102m
                        });
                });

            modelBuilder.Entity("Dominio.Operacao.ItemTransacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Cvv");

                    b.Property<Guid>("IdTaxa");

                    b.Property<Guid>("IdTransacao");

                    b.Property<string>("NumeroCartao");

                    b.Property<string>("Validade");

                    b.Property<decimal>("Valor");

                    b.HasKey("Id");

                    b.HasIndex("IdTaxa");

                    b.HasIndex("IdTransacao");

                    b.ToTable("ItemTransacao");
                });

            modelBuilder.Entity("Dominio.Operacao.Transacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Data");

                    b.Property<decimal>("Valor");

                    b.HasKey("Id");

                    b.ToTable("Transacao");
                });

            modelBuilder.Entity("Dominio.Aliquota.Taxa", b =>
                {
                    b.HasOne("Dominio.Aliquota.Adquirente", "Adquirente")
                        .WithMany("Aliquotas")
                        .HasForeignKey("IdAdquirente")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Dominio.Aliquota.Bandeira", "Bandeira")
                        .WithMany("Aliquotas")
                        .HasForeignKey("IdBandeira")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Dominio.Operacao.ItemTransacao", b =>
                {
                    b.HasOne("Dominio.Aliquota.Taxa", "Taxa")
                        .WithMany("Transacoes")
                        .HasForeignKey("IdTaxa")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Dominio.Operacao.Transacao", "Transacao")
                        .WithMany("Transacoes")
                        .HasForeignKey("IdTransacao")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
