// <auto-generated />
using System;
using Infra.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infra.Migrations
{
    [DbContext(typeof(Contexto))]
    partial class ContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Dominio.Aliquota.Adquirente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Adquirente");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6a3cf263-33a6-4f99-9601-162406e764e8"),
                            Nome = "Elo"
                        },
                        new
                        {
                            Id = new Guid("af1b1c35-6c19-427c-99c0-e8d694358685"),
                            Nome = "Visa"
                        },
                        new
                        {
                            Id = new Guid("adfa74d2-0c42-4173-acff-fedfc0aa2a47"),
                            Nome = "Master"
                        });
                });

            modelBuilder.Entity("Dominio.Aliquota.Bandeira", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Bandeira");

                    b.HasData(
                        new
                        {
                            Id = new Guid("45304af0-3056-4e30-aaca-c4fd5db7fbdb"),
                            Nome = "Cielo"
                        },
                        new
                        {
                            Id = new Guid("970c4e0b-65c5-4c59-9a50-07a34f3c6886"),
                            Nome = "Elavon"
                        },
                        new
                        {
                            Id = new Guid("f5ae6f11-11d6-4da8-8554-5e63816ca018"),
                            Nome = "GetNet"
                        });
                });

            modelBuilder.Entity("Dominio.Aliquota.Taxa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("IdAdquirente");

                    b.Property<Guid>("IdBandeira");

                    b.Property<decimal>("Percentual");

                    b.HasKey("Id");

                    b.HasIndex("IdAdquirente");

                    b.HasIndex("IdBandeira");

                    b.ToTable("Aliquota");

                    b.HasData(
                        new
                        {
                            Id = new Guid("898601c0-8fc6-4eb0-bf9f-b1d362f37315"),
                            IdAdquirente = new Guid("af1b1c35-6c19-427c-99c0-e8d694358685"),
                            IdBandeira = new Guid("45304af0-3056-4e30-aaca-c4fd5db7fbdb"),
                            Percentual = 0.03m
                        },
                        new
                        {
                            Id = new Guid("9764532c-b9d0-4731-a821-87ac6f348d3a"),
                            IdAdquirente = new Guid("af1b1c35-6c19-427c-99c0-e8d694358685"),
                            IdBandeira = new Guid("970c4e0b-65c5-4c59-9a50-07a34f3c6886"),
                            Percentual = 1.5m
                        },
                        new
                        {
                            Id = new Guid("b219fdea-97d6-43c5-8def-2874abb84bc6"),
                            IdAdquirente = new Guid("af1b1c35-6c19-427c-99c0-e8d694358685"),
                            IdBandeira = new Guid("f5ae6f11-11d6-4da8-8554-5e63816ca018"),
                            Percentual = 1.07m
                        },
                        new
                        {
                            Id = new Guid("10fe7f05-016b-49a4-bcd2-0dca30c349cf"),
                            IdAdquirente = new Guid("adfa74d2-0c42-4173-acff-fedfc0aa2a47"),
                            IdBandeira = new Guid("45304af0-3056-4e30-aaca-c4fd5db7fbdb"),
                            Percentual = 0.02m
                        },
                        new
                        {
                            Id = new Guid("f5143c6d-6ee9-44d5-82e6-676bcade27a5"),
                            IdAdquirente = new Guid("adfa74d2-0c42-4173-acff-fedfc0aa2a47"),
                            IdBandeira = new Guid("970c4e0b-65c5-4c59-9a50-07a34f3c6886"),
                            Percentual = 1.08m
                        },
                        new
                        {
                            Id = new Guid("f3d074b0-1949-4279-b437-71ff0645edbf"),
                            IdAdquirente = new Guid("adfa74d2-0c42-4173-acff-fedfc0aa2a47"),
                            IdBandeira = new Guid("f5ae6f11-11d6-4da8-8554-5e63816ca018"),
                            Percentual = 1.14m
                        },
                        new
                        {
                            Id = new Guid("7c090179-de71-4f05-a138-ef9621e5ee6a"),
                            IdAdquirente = new Guid("6a3cf263-33a6-4f99-9601-162406e764e8"),
                            IdBandeira = new Guid("45304af0-3056-4e30-aaca-c4fd5db7fbdb"),
                            Percentual = 0.01m
                        },
                        new
                        {
                            Id = new Guid("0d4ed50a-7882-425d-8dd3-9e8fcccc13d2"),
                            IdAdquirente = new Guid("6a3cf263-33a6-4f99-9601-162406e764e8"),
                            IdBandeira = new Guid("970c4e0b-65c5-4c59-9a50-07a34f3c6886"),
                            Percentual = 0.95m
                        },
                        new
                        {
                            Id = new Guid("a0921c93-08a7-4c29-b193-d92ca032c00d"),
                            IdAdquirente = new Guid("6a3cf263-33a6-4f99-9601-162406e764e8"),
                            IdBandeira = new Guid("f5ae6f11-11d6-4da8-8554-5e63816ca018"),
                            Percentual = 1.02m
                        });
                });

            modelBuilder.Entity("Dominio.Operacao.ItemTransacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Cvv");

                    b.Property<Guid>("IdAliquota");

                    b.Property<Guid>("IdTransacao");

                    b.Property<string>("NumeroCartao");

                    b.Property<DateTime>("Validade");

                    b.Property<decimal>("Valor");

                    b.HasKey("Id");

                    b.HasIndex("IdAliquota");

                    b.HasIndex("IdTransacao");

                    b.ToTable("ItemTransacao");
                });

            modelBuilder.Entity("Dominio.Operacao.Transacao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Data");

                    b.Property<decimal>("Valor");

                    b.HasKey("Id");

                    b.ToTable("Transacao");
                });

            modelBuilder.Entity("Dominio.Aliquota.Taxa", b =>
                {
                    b.HasOne("Dominio.Aliquota.Adquirente", "Adquirente")
                        .WithMany("Aliquotas")
                        .HasForeignKey("IdAdquirente")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Dominio.Aliquota.Bandeira", "Bandeira")
                        .WithMany("Aliquotas")
                        .HasForeignKey("IdBandeira")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Dominio.Operacao.ItemTransacao", b =>
                {
                    b.HasOne("Dominio.Aliquota.Taxa", "Aliquota")
                        .WithMany("Transacoes")
                        .HasForeignKey("IdAliquota")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Dominio.Operacao.Transacao", "Transacao")
                        .WithMany("Transacoes")
                        .HasForeignKey("IdTransacao")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
